{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryce\\\\Documents\\\\GitHub\\\\Level-Up\\\\lvlfrontend\\\\src\\\\assets\\\\carousel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport ReactFlow, { Handle } from 'react-flow-renderer';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Define the initial data for each tree (nodes and edges)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst treesData = [{\n  nodes: [{\n    id: '1',\n    type: 'taskNode',\n    data: {\n      label: 'Tree 1 - Task 1'\n    },\n    position: {\n      x: 150,\n      y: 50\n    }\n  }, {\n    id: '2',\n    type: 'taskNode',\n    data: {\n      label: 'Tree 1 - Task 2'\n    },\n    position: {\n      x: 200,\n      y: 200\n    }\n  }, {\n    id: '2',\n    type: 'taskNode',\n    data: {\n      label: 'Tree 1 - Task 2'\n    },\n    position: {\n      x: 250,\n      y: 300\n    }\n  }],\n  edges: [{\n    id: 'e1-2',\n    source: '1',\n    target: '2',\n    type: 'default'\n  }]\n}, {\n  nodes: [{\n    id: '3',\n    type: 'taskNode',\n    data: {\n      label: 'Tree 2 - Task 1'\n    },\n    position: {\n      x: 100,\n      y: 150\n    }\n  }, {\n    id: '4',\n    type: 'taskNode',\n    data: {\n      label: 'Tree 2 - Task 2'\n    },\n    position: {\n      x: 250,\n      y: 300\n    }\n  }, {\n    id: '5',\n    type: 'taskNode',\n    data: {\n      label: 'Tree 2 - Task 3'\n    },\n    position: {\n      x: 400,\n      y: 150\n    }\n  }],\n  edges: [{\n    id: 'e3-4',\n    source: '3',\n    target: '4',\n    type: 'default'\n  }, {\n    id: 'e4-5',\n    source: '4',\n    target: '5',\n    type: 'default'\n  }]\n}, {\n  nodes: [{\n    id: '6',\n    type: 'taskNode',\n    data: {\n      label: 'Tree 3 - Task 1'\n    },\n    position: {\n      x: 150,\n      y: 50\n    }\n  }, {\n    id: '7',\n    type: 'taskNode',\n    data: {\n      label: 'Tree 3 - Task 2'\n    },\n    position: {\n      x: 300,\n      y: 200\n    }\n  }],\n  edges: [{\n    id: 'e6-7',\n    source: '6',\n    target: '7',\n    type: 'default'\n  }]\n}];\nconst nodeTypes = {\n  taskNode: ({\n    data\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      borderRadius: '50%',\n      width: '50px',\n      height: '50px',\n      backgroundColor: '#007bff',\n      color: 'white',\n      textAlign: 'center',\n      lineHeight: '50px',\n      cursor: 'pointer'\n    },\n    children: data.label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this)\n};\nfunction TreeFlow({\n  treeData\n}) {\n  return /*#__PURE__*/_jsxDEV(ReactFlow, {\n    nodes: treeData.nodes,\n    edges: treeData.edges,\n    nodeTypes: nodeTypes,\n    fitView: true,\n    style: {\n      width: '100%',\n      height: '300px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_c = TreeFlow;\nfunction CarouselWithTrees() {\n  _s();\n  const [index, setIndex] = useState(0);\n  const handleSelect = (selectedIndex, e) => {\n    setIndex(selectedIndex);\n  };\n  return /*#__PURE__*/_jsxDEV(Carousel, {\n    activeIndex: index,\n    onSelect: handleSelect,\n    interval: null,\n    children: treesData.map((treeData, idx) => /*#__PURE__*/_jsxDEV(Carousel.Item, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          height: '400px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Tree \", idx + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TreeFlow, {\n          treeData: treeData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(CarouselWithTrees, \"x2oTrUAHknTo02Ld7gcDOqaxQ8E=\");\n_c2 = CarouselWithTrees;\nexport default CarouselWithTrees;\nvar _c, _c2;\n$RefreshReg$(_c, \"TreeFlow\");\n$RefreshReg$(_c2, \"CarouselWithTrees\");","map":{"version":3,"names":["React","useState","Carousel","ReactFlow","Handle","jsxDEV","_jsxDEV","treesData","nodes","id","type","data","label","position","x","y","edges","source","target","nodeTypes","taskNode","style","borderRadius","width","height","backgroundColor","color","textAlign","lineHeight","cursor","children","fileName","_jsxFileName","lineNumber","columnNumber","TreeFlow","treeData","fitView","_c","CarouselWithTrees","_s","index","setIndex","handleSelect","selectedIndex","e","activeIndex","onSelect","interval","map","idx","Item","_c2","$RefreshReg$"],"sources":["C:/Users/bryce/Documents/GitHub/Level-Up/lvlfrontend/src/assets/carousel.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport ReactFlow, { Handle } from 'react-flow-renderer';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// Define the initial data for each tree (nodes and edges)\r\nconst treesData = [\r\n  {\r\n    nodes: [\r\n      { id: '1', type: 'taskNode', data: { label: 'Tree 1 - Task 1' }, position: { x: 150, y: 50 } },\r\n      { id: '2', type: 'taskNode', data: { label: 'Tree 1 - Task 2' }, position: { x: 200, y: 200 } },\r\n      { id: '2', type: 'taskNode', data: { label: 'Tree 1 - Task 2' }, position: { x: 250, y: 300 } },\r\n\r\n    ],\r\n    edges: [\r\n      { id: 'e1-2', source: '1', target: '2', type: 'default' }\r\n    ]\r\n  },\r\n  {\r\n    nodes: [\r\n      { id: '3', type: 'taskNode', data: { label: 'Tree 2 - Task 1' }, position: { x: 100, y: 150 } },\r\n      { id: '4', type: 'taskNode', data: { label: 'Tree 2 - Task 2' }, position: { x: 250, y: 300 } },\r\n      { id: '5', type: 'taskNode', data: { label: 'Tree 2 - Task 3' }, position: { x: 400, y: 150 } },\r\n    ],\r\n    edges: [\r\n      { id: 'e3-4', source: '3', target: '4', type: 'default' },\r\n      { id: 'e4-5', source: '4', target: '5', type: 'default' }\r\n    ]\r\n  },\r\n  {\r\n    nodes: [\r\n      { id: '6', type: 'taskNode', data: { label: 'Tree 3 - Task 1' }, position: { x: 150, y: 50 } },\r\n      { id: '7', type: 'taskNode', data: { label: 'Tree 3 - Task 2' }, position: { x: 300, y: 200 } },\r\n    ],\r\n    edges: [\r\n      { id: 'e6-7', source: '6', target: '7', type: 'default' }\r\n    ]\r\n  }\r\n];\r\n\r\nconst nodeTypes = {\r\n  taskNode: ({ data }) => (\r\n    <div\r\n      style={{\r\n        borderRadius: '50%',\r\n        width: '50px',\r\n        height: '50px',\r\n        backgroundColor: '#007bff',\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        lineHeight: '50px',\r\n        cursor: 'pointer',\r\n      }}\r\n    >\r\n      {data.label}\r\n    </div>\r\n  ),\r\n};\r\n\r\nfunction TreeFlow({ treeData }) {\r\n  return (\r\n    <ReactFlow\r\n      nodes={treeData.nodes}\r\n      edges={treeData.edges}\r\n      nodeTypes={nodeTypes}\r\n      fitView\r\n      style={{ width: '100%', height: '300px' }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction CarouselWithTrees() {\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const handleSelect = (selectedIndex, e) => {\r\n    setIndex(selectedIndex);\r\n  };\r\n\r\n  return (\r\n    <Carousel activeIndex={index} onSelect={handleSelect} interval={null}>\r\n      {treesData.map((treeData, idx) => (\r\n        <Carousel.Item key={idx}>\r\n          <div style={{ width: '100%', height: '400px' }}>\r\n            <h3>Tree {idx + 1}</h3>\r\n            <TreeFlow treeData={treeData} />\r\n          </div>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n}\r\n\r\nexport default CarouselWithTrees;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}