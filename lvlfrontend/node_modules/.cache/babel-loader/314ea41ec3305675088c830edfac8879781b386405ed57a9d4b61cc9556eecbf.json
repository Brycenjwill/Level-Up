{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryce\\\\Documents\\\\GitHub\\\\Level-Up\\\\lvlfrontend\\\\src\\\\assets\\\\carousel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport ReactFlow from 'react-flow-renderer';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialNodes = [{\n  id: '1',\n  type: 'taskNode',\n  data: {\n    label: 'Task 1'\n  },\n  position: {\n    x: 150,\n    y: 50\n  }\n}, {\n  id: '2',\n  type: 'taskNode',\n  data: {\n    label: 'Task 2'\n  },\n  position: {\n    x: 300,\n    y: 200\n  }\n}];\nconst initialEdges = [{\n  id: 'e1-2',\n  source: '1',\n  target: '2',\n  type: 'straight',\n  style: {\n    stroke: 'white',\n    strokeWidth: 2\n  }\n}];\nconst nodeTypes = {\n  taskNode: ({\n    data\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      borderRadius: '50%',\n      width: '50px',\n      height: '50px',\n      backgroundColor: '#007bff',\n      color: 'white',\n      textAlign: 'center',\n      lineHeight: '50px',\n      cursor: 'pointer'\n    },\n    children: data.label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this)\n};\nfunction TreeFlow({\n  nodes,\n  edges\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"react-flow-container\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      nodeTypes: nodeTypes,\n      fitView: true,\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_c = TreeFlow;\nfunction CarouselWithTrees() {\n  _s();\n  const [index, setIndex] = useState(0);\n  const handleSelect = (selectedIndex, e) => {\n    setIndex(selectedIndex);\n  };\n  const treesData = [{\n    nodes: initialNodes,\n    edges: initialEdges\n  }\n  // Add more trees here with unique nodes and edges\n  ];\n  return /*#__PURE__*/_jsxDEV(Carousel, {\n    activeIndex: index,\n    onSelect: handleSelect,\n    interval: null,\n    children: treesData.map((treeData, idx) => /*#__PURE__*/_jsxDEV(Carousel.Item, {\n      children: /*#__PURE__*/_jsxDEV(TreeFlow, {\n        nodes: treeData.nodes,\n        edges: treeData.edges\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(CarouselWithTrees, \"x2oTrUAHknTo02Ld7gcDOqaxQ8E=\");\n_c2 = CarouselWithTrees;\nexport default CarouselWithTrees;\nvar _c, _c2;\n$RefreshReg$(_c, \"TreeFlow\");\n$RefreshReg$(_c2, \"CarouselWithTrees\");","map":{"version":3,"names":["React","useState","Carousel","ReactFlow","jsxDEV","_jsxDEV","initialNodes","id","type","data","label","position","x","y","initialEdges","source","target","style","stroke","strokeWidth","nodeTypes","taskNode","borderRadius","width","height","backgroundColor","color","textAlign","lineHeight","cursor","children","fileName","_jsxFileName","lineNumber","columnNumber","TreeFlow","nodes","edges","className","fitView","_c","CarouselWithTrees","_s","index","setIndex","handleSelect","selectedIndex","e","treesData","activeIndex","onSelect","interval","map","treeData","idx","Item","_c2","$RefreshReg$"],"sources":["C:/Users/bryce/Documents/GitHub/Level-Up/lvlfrontend/src/assets/carousel.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport ReactFlow from 'react-flow-renderer';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nconst initialNodes = [\r\n  { id: '1', type: 'taskNode', data: { label: 'Task 1' }, position: { x: 150, y: 50 } },\r\n  { id: '2', type: 'taskNode', data: { label: 'Task 2' }, position: { x: 300, y: 200 } },\r\n];\r\n\r\nconst initialEdges = [\r\n  { id: 'e1-2', source: '1', target: '2', type: 'straight', style: { stroke: 'white', strokeWidth: 2 } },\r\n];\r\n\r\nconst nodeTypes = {\r\n  taskNode: ({ data }) => (\r\n    <div\r\n      style={{\r\n        borderRadius: '50%',\r\n        width: '50px',\r\n        height: '50px',\r\n        backgroundColor: '#007bff',\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        lineHeight: '50px',\r\n        cursor: 'pointer',\r\n      }}\r\n    >\r\n      {data.label}\r\n    </div>\r\n  ),\r\n};\r\n\r\nfunction TreeFlow({ nodes, edges }) {\r\n  return (\r\n    <div className=\"react-flow-container\">\r\n      <ReactFlow\r\n        nodes={nodes}\r\n        edges={edges}\r\n        nodeTypes={nodeTypes}\r\n        fitView\r\n        style={{ width: '100%', height: '100%' }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CarouselWithTrees() {\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const handleSelect = (selectedIndex, e) => {\r\n    setIndex(selectedIndex);\r\n  };\r\n\r\n  const treesData = [\r\n    {\r\n      nodes: initialNodes,\r\n      edges: initialEdges,\r\n    },\r\n    // Add more trees here with unique nodes and edges\r\n  ];\r\n\r\n  return (\r\n    <Carousel activeIndex={index} onSelect={handleSelect} interval={null}>\r\n      {treesData.map((treeData, idx) => (\r\n        <Carousel.Item key={idx}>\r\n          <TreeFlow nodes={treeData.nodes} edges={treeData.edges} />\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n}\r\n\r\nexport default CarouselWithTrees;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}